{"ast":null,"code":"var _jsxFileName = \"/Users/makaylabohnet/Desktop/SpanishLab-Cole/client/src/pages/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Route, useNavigate, useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport ImageComponent from './generateImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst popularAnswers = [];\nfunction Room() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [answer, setAnswer] = useState('');\n  const [answers, setAnswers] = useState([]);\n  const [isTeacher, setIsTeacher] = useState(false);\n  const [promptIndex, setPromptIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [hasAnswered, setHasAnswered] = useState(false);\n  const [showImage, setShowImage] = useState(false);\n  const [finalPrompt, setFinalPrompt] = useState('');\n  const [showPopularAnswer, setPopularAnswer] = useState(false);\n  const Questions = [{\n    \"question\": \"What animal is our story about?\",\n    \"options\": [\"Dog\", \"Cat\", \"Lion\", \"Bear\"]\n  }, {\n    \"question\": \"What is the animal eating?\",\n    \"options\": [\"Hamburger\", \"Sushi\", \"Pizza\", \"Burrito\"]\n  }, {\n    \"question\": \"Where is the animal eating?\",\n    \"options\": [\"On the beach\", \"At School\", \"In The Mountains\", \"At the Lake\"]\n  }];\n  var isDone = false;\n  var displayEnd = promptIndex + 1 === Questions.length ? true : false;\n  let connectCounter = 0;\n  useEffect(() => {\n    socket.emit('joinRoom', roomId);\n    socket.on('receiveAnswer', receivedAnswer => {\n      setAnswers(prevAnswers => [...prevAnswers, receivedAnswer]);\n    });\n    socket.on('teacher', () => {\n      setIsTeacher(true);\n    });\n    socket.on('connect', function () {\n      connectCounter++;\n    });\n    socket.on('disconnect', function () {\n      connectCounter--;\n    });\n    socket.on('nextPrompt', () => {\n      setPromptIndex(prevIndex => prevIndex + 1);\n      setAnswers([]);\n      setHasAnswered(false);\n    });\n    return () => {\n      socket.off('receiveAnswer');\n      socket.off('teacher');\n      socket.off('nextPrompt');\n    };\n  }, [roomId]);\n  const handleNextPrompt = () => {\n    popularAnswers.push(popularAnswer());\n    console.log(promptIndex + \" \" + Questions.length);\n    if (promptIndex + 1 === Questions.length) {\n      isDone = true;\n    } else {\n      socket.emit('nextPrompt', roomId);\n    }\n  };\n  const handleEndQuiz = () => {\n    popularAnswers.push(popularAnswer());\n    setFinalPrompt(`A cartoon ${popularAnswers[0]} eating a ${popularAnswers[1]} ${popularAnswers[2]}`);\n    setShowImage(true);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    socket.emit('newAnswer', {\n      roomId,\n      answer: selectedAnswer\n    });\n    setSelectedAnswer('');\n    setHasAnswered(true);\n  };\n  const popularAnswer = () => {\n    const counts = {};\n    let maxCount = 0;\n    let maxValue = null;\n    answers.forEach(a => {\n      counts[a] = (counts[a] || 0) + 1;\n      if (counts[a] > maxCount) {\n        maxCount = counts[a];\n        maxValue = a;\n      }\n    });\n    return maxValue;\n  };\n  function countAnswers() {\n    const counts = {};\n    let maxCount = 0;\n    let maxValue = null;\n    answers.forEach(a => {\n      counts[a] = (counts[a] || 0) + 1;\n      if (counts[a] > maxCount) {\n        maxCount = counts[a];\n        maxValue = a;\n      }\n    });\n    return maxCount;\n  }\n  let navigate = useNavigate();\n  const navigatePopularAnswer = e => {\n    navigate(`/popular-answer`);\n  };\n  localStorage.setItem(\"popularAnswer\", popularAnswer());\n  localStorage.setItem(\"isTeacher\", isTeacher.toString());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roomPage\",\n    children: showImage ? /*#__PURE__*/_jsxDEV(ImageComponent, {\n      prompt: finalPrompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columnDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Prompt: \", Questions[promptIndex].question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"question\",\n          onSubmit: handleSubmit,\n          children: [Questions[promptIndex].options.map((choice, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `choice-${index}`,\n              name: \"answer\",\n              value: choice,\n              onChange: e => setSelectedAnswer(e.target.value),\n              required: true\n            }, `prompt-${promptIndex}-choice-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `choice-${index}`,\n              children: choice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"secondaryButton\",\n            type: \"submit\",\n            disabled: hasAnswered,\n            children: \"Submit Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columnDisplay \",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Popular Answer: \", popularAnswer()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"All Answers: \", countAnswers()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"All Answers:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: answer\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightAlignedContainer bottomRightButton\",\n        children: displayEnd ? /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"primaryButton\",\n          type: \"button\",\n          onClick: handleEndQuiz,\n          children: \"End Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primaryButton\",\n          type: \"button\",\n          onClick: handleNextPrompt,\n          children: \"Next Prompt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), \")}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_s(Room, \"UN+LXFUXA2aeWVfTtQmE+OxEE6U=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useEffect","Route","useNavigate","useParams","io","ImageComponent","jsxDEV","_jsxDEV","socket","popularAnswers","Room","_s","roomId","answer","setAnswer","answers","setAnswers","isTeacher","setIsTeacher","promptIndex","setPromptIndex","selectedAnswer","setSelectedAnswer","hasAnswered","setHasAnswered","showImage","setShowImage","finalPrompt","setFinalPrompt","showPopularAnswer","setPopularAnswer","Questions","isDone","displayEnd","length","connectCounter","emit","on","receivedAnswer","prevAnswers","prevIndex","off","handleNextPrompt","push","popularAnswer","console","log","handleEndQuiz","handleSubmit","e","preventDefault","counts","maxCount","maxValue","forEach","a","countAnswers","navigate","navigatePopularAnswer","localStorage","setItem","toString","className","children","prompt","fileName","_jsxFileName","lineNumber","columnNumber","question","onSubmit","options","map","choice","index","type","id","name","value","onChange","target","required","htmlFor","disabled","class","onClick","_c","$RefreshReg$"],"sources":["/Users/makaylabohnet/Desktop/SpanishLab-Cole/client/src/pages/Room.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Route, useNavigate, useParams} from 'react-router-dom';\nimport io from 'socket.io-client';\nimport ImageComponent from './generateImage';\n\nconst socket = io('http://localhost:3001');\n\nconst popularAnswers = [];\n\nfunction Room() {\n    const { roomId } = useParams();\n    const [answer, setAnswer] = useState('');\n    const [answers, setAnswers] = useState([]);\n    const [isTeacher, setIsTeacher] = useState(false);\n    const [promptIndex, setPromptIndex] = useState(0);\n    const [selectedAnswer, setSelectedAnswer] = useState('');\n    const [hasAnswered, setHasAnswered] = useState(false);\n    const [showImage, setShowImage] = useState(false);\n    const [finalPrompt, setFinalPrompt] = useState('');\n    const [showPopularAnswer, setPopularAnswer] = useState(false);\n    const Questions = [\n        { \"question\": \"What animal is our story about?\", \"options\": [\"Dog\", \"Cat\", \"Lion\", \"Bear\"] },\n        { \"question\": \"What is the animal eating?\", \"options\": [\"Hamburger\", \"Sushi\", \"Pizza\", \"Burrito\"] },\n        { \"question\": \"Where is the animal eating?\", \"options\": [\"On the beach\", \"At School\", \"In The Mountains\", \"At the Lake\"] },\n    ]\n\n    var isDone = false;\n    var displayEnd = (promptIndex+1 === Questions.length) ? true : false;\n    let connectCounter = 0;\n\n    useEffect(() => {\n        socket.emit('joinRoom', roomId);\n\n        socket.on('receiveAnswer', (receivedAnswer) => {\n            setAnswers((prevAnswers) => [...prevAnswers, receivedAnswer]);\n        });\n\n        socket.on('teacher', () => {\n            setIsTeacher(true);\n\n        });\n        socket.on('connect', function() { connectCounter++; });\n        socket.on('disconnect', function() { connectCounter--; });\n\n        socket.on('nextPrompt', () => {\n            setPromptIndex((prevIndex) => prevIndex + 1);\n            setAnswers([]);\n            setHasAnswered(false);\n        });\n\n        return () => {\n            socket.off('receiveAnswer');\n            socket.off('teacher');\n            socket.off('nextPrompt');\n        };\n    }, [roomId]);\n\n    const handleNextPrompt = () => {\n        popularAnswers.push(popularAnswer());\n        console.log(promptIndex + \" \" + Questions.length)\n        if(promptIndex+1 === Questions.length) {\n            isDone = true;\n        } else {\n            socket.emit('nextPrompt', roomId);\n        }\n    };\n\n    const handleEndQuiz = () => {\n        popularAnswers.push(popularAnswer());\n        setFinalPrompt(`A cartoon ${popularAnswers[0]} eating a ${popularAnswers[1]} ${popularAnswers[2]}`);\n        setShowImage(true);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        socket.emit('newAnswer', { roomId, answer: selectedAnswer });\n        setSelectedAnswer('');\n        setHasAnswered(true);\n      };\n\n    const popularAnswer = () => {\n        const counts = {};\n        let maxCount = 0;\n        let maxValue = null;\n\n        answers.forEach((a) => {\n            counts[a] = (counts[a] || 0) + 1;\n            if (counts[a] > maxCount) {\n                maxCount = counts[a];\n                maxValue = a;\n            }\n        });\n        return maxValue;\n    };\n    function countAnswers() {\n        const counts = {};\n        let maxCount = 0;\n        let maxValue = null;\n\n        answers.forEach((a) => {\n            counts[a] = (counts[a] || 0) + 1;\n            if (counts[a] > maxCount) {\n                maxCount = counts[a];\n                maxValue = a;\n            }\n        });\n        return maxCount;\n    }\n\n    let navigate = useNavigate();\n\n    const navigatePopularAnswer = (e) => {\n        navigate(`/popular-answer`);\n    };\n\n\n    localStorage.setItem(\"popularAnswer\",popularAnswer());\n    localStorage.setItem(\"isTeacher\", isTeacher.toString())\n\n    return (\n        <div className=\"roomPage\">\n        {showImage ? <ImageComponent prompt={finalPrompt} /> :\n        <div>\n            <div>\n                <h1>Room: {roomId}</h1>\n            </div>\n            <div className=\"columnDisplay\">\n            <h2>Prompt: {Questions[promptIndex].question}</h2>\n            <form className =\"question\" onSubmit={handleSubmit}>\n                {Questions[promptIndex].options.map((choice, index) => (\n                    <div key={index}>\n                        <input\n                            key={`prompt-${promptIndex}-choice-${index}`}\n                            type=\"radio\"\n                            id={`choice-${index}`}\n                            name=\"answer\"\n                            value={choice}\n                            onChange={(e) => setSelectedAnswer(e.target.value)}\n                            required\n                        />\n                        <label htmlFor={`choice-${index}`}>{choice}</label>\n                    </div>\n                ))}\n                <button className = \"secondaryButton\" type=\"submit\" disabled={hasAnswered}>Submit Answer</button>\n            </form>\n            </div>\n                <div className=\"columnDisplay \">\n                    <h2>Popular Answer: {popularAnswer()}</h2>\n                    <h2>All Answers: {countAnswers()}</h2>\n                    <h3>All Answers:</h3>\n                    <ul>\n                        {answers.map((answer, index) => (\n                            <li key={index}>{answer}</li>\n                        ))}\n                    </ul>\n                </div>\n                <div className = \"rightAlignedContainer bottomRightButton\">\n                {displayEnd ?\n                    <button class = \"primaryButton\" type=\"button\" onClick={handleEndQuiz}>\n                        End Quiz\n                    </button> :\n                    <button className = \"primaryButton\" type=\"button\" onClick={handleNextPrompt}>\n                        Next Prompt\n                    </button>\n                }\n                </div>\n            )}\n        </div>\n        }\n        </div>\n\n    );\n}\n\nexport default Room;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}